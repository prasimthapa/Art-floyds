// Generated by Xata Codegen 0.29.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "nextauth_users",
    columns: [
      { name: "name", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "image", type: "string" },
      { name: "emailVerified", type: "datetime" },
      { name: "contactInfo", type: "multiple" },
      { name: "role", type: "string", notNull: true, defaultValue: "buyer" },
      { name: "bio", type: "string" },
      { name: "events", type: "link", link: { table: "event" } },
    ],
    revLinks: [
      { column: "user", table: "nextauth_accounts" },
      { column: "user", table: "nextauth_sessions" },
      { column: "artist", table: "artwork" },
      { column: "user", table: "nextauth_users_accounts" },
      { column: "user", table: "nextauth_users_sessions" },
      { column: "user", table: "wishlist" },
      { column: "user", table: "userSocialMedia" },
      { column: "sender", table: "chatMessage" },
      { column: "member", table: "chatMember" },
      { column: "user", table: "order" },
      { column: "user", table: "follower" },
      { column: "follower", table: "follower" },
      { column: "user", table: "following" },
      { column: "following", table: "following" },
      { column: "owner", table: "chat" },
      { column: "user", table: "eventRequest" },
    ],
  },
  {
    name: "nextauth_accounts",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "provider", type: "string", notNull: true, defaultValue: "" },
      {
        name: "providerAccountId",
        type: "string",
        notNull: true,
        defaultValue: "",
      },
      { name: "refresh_token", type: "text" },
      { name: "access_token", type: "text" },
      { name: "expires_at", type: "int" },
      { name: "token_type", type: "string" },
      { name: "scope", type: "string" },
      { name: "id_token", type: "text" },
      { name: "session_state", type: "string" },
      { name: "type", type: "string" },
    ],
    revLinks: [{ column: "account", table: "nextauth_users_accounts" }],
  },
  {
    name: "nextauth_sessions",
    columns: [
      { name: "sessionToken", type: "string", unique: true },
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "expires", type: "datetime" },
    ],
    revLinks: [{ column: "session", table: "nextauth_users_sessions" }],
  },
  {
    name: "artwork",
    columns: [
      { name: "name", type: "string" },
      { name: "artist", type: "link", link: { table: "nextauth_users" } },
      { name: "price", type: "int", notNull: true, defaultValue: "0" },
      { name: "style", type: "string" },
      { name: "size", type: "string" },
      { name: "image", type: "file", file: { defaultPublicAccess: true } },
      {
        name: "secondaryAttachments",
        type: "file[]",
        "file[]": { defaultPublicAccess: true },
      },
      {
        name: "category",
        type: "string",
        notNull: true,
        defaultValue: "general",
      },
      {
        name: "availableQuantity",
        type: "int",
        notNull: true,
        defaultValue: "0",
      },
    ],
    revLinks: [
      { column: "artwork", table: "wishlist" },
      { column: "artwork", table: "cartItem" },
      { column: "artwork", table: "orderArtwork" },
    ],
  },
  {
    name: "nextauth_verificationTokens",
    columns: [
      { name: "identifier", type: "string" },
      { name: "token", type: "string" },
      { name: "expires", type: "datetime" },
    ],
  },
  {
    name: "nextauth_users_accounts",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "account", type: "link", link: { table: "nextauth_accounts" } },
    ],
  },
  {
    name: "nextauth_users_sessions",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "session", type: "link", link: { table: "nextauth_sessions" } },
    ],
  },
  {
    name: "wishlist",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "artwork", type: "link", link: { table: "artwork" } },
    ],
  },
  {
    name: "cart",
    columns: [{ name: "user_id", type: "string", unique: true }],
    revLinks: [{ column: "cart", table: "cartItem" }],
  },
  {
    name: "cartItem",
    columns: [
      { name: "cart", type: "link", link: { table: "cart" } },
      { name: "artwork", type: "link", link: { table: "artwork" } },
    ],
  },
  {
    name: "socialMedia",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "icon", type: "file", file: { defaultPublicAccess: true } },
    ],
    revLinks: [{ column: "socialMedia", table: "userSocialMedia" }],
  },
  {
    name: "userSocialMedia",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "socialMedia", type: "link", link: { table: "socialMedia" } },
      { name: "link", type: "string" },
    ],
  },
  {
    name: "order",
    columns: [
      {
        name: "status",
        type: "string",
        notNull: true,
        defaultValue: "pending",
      },
      { name: "user", type: "link", link: { table: "nextauth_users" } },
    ],
    revLinks: [{ column: "order", table: "orderArtwork" }],
  },
  {
    name: "orderArtwork",
    columns: [
      { name: "artwork", type: "link", link: { table: "artwork" } },
      { name: "order", type: "link", link: { table: "order" } },
    ],
  },
  {
    name: "chat",
    columns: [
      { name: "title", type: "string" },
      { name: "type", type: "string", defaultValue: "group" },
      { name: "chatMesssage", type: "link", link: { table: "chatMessage" } },
      { name: "description", type: "text" },
      { name: "owner", type: "link", link: { table: "nextauth_users" } },
    ],
    revLinks: [
      { column: "chat", table: "chatMember" },
      { column: "chat", table: "chatMessage" },
    ],
  },
  {
    name: "chatMessage",
    columns: [
      { name: "sender", type: "link", link: { table: "nextauth_users" } },
      { name: "message", type: "string" },
      {
        name: "attachments",
        type: "file[]",
        "file[]": { defaultPublicAccess: true },
      },
      { name: "chat", type: "link", link: { table: "chat" } },
    ],
    revLinks: [{ column: "chatMesssage", table: "chat" }],
  },
  {
    name: "chatMember",
    columns: [
      { name: "chat", type: "link", link: { table: "chat" } },
      { name: "member", type: "link", link: { table: "nextauth_users" } },
    ],
  },
  {
    name: "follower",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "follower", type: "link", link: { table: "nextauth_users" } },
    ],
  },
  {
    name: "following",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "following", type: "link", link: { table: "nextauth_users" } },
    ],
  },
  {
    name: "event",
    columns: [
      { name: "dateTime", type: "datetime" },
      { name: "location", type: "string" },
      { name: "name", type: "string" },
      { name: "description", type: "text" },
    ],
    revLinks: [
      { column: "events", table: "nextauth_users" },
      { column: "event", table: "eventRequest" },
    ],
  },
  {
    name: "eventRequest",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "email", type: "email" },
      { name: "phone", type: "string" },
      { name: "event", type: "link", link: { table: "event" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type NextauthUsers = InferredTypes["nextauth_users"];
export type NextauthUsersRecord = NextauthUsers & XataRecord;

export type NextauthAccounts = InferredTypes["nextauth_accounts"];
export type NextauthAccountsRecord = NextauthAccounts & XataRecord;

export type NextauthSessions = InferredTypes["nextauth_sessions"];
export type NextauthSessionsRecord = NextauthSessions & XataRecord;

export type Artwork = InferredTypes["artwork"];
export type ArtworkRecord = Artwork & XataRecord;

export type NextauthVerificationTokens =
  InferredTypes["nextauth_verificationTokens"];
export type NextauthVerificationTokensRecord = NextauthVerificationTokens &
  XataRecord;

export type NextauthUsersAccounts = InferredTypes["nextauth_users_accounts"];
export type NextauthUsersAccountsRecord = NextauthUsersAccounts & XataRecord;

export type NextauthUsersSessions = InferredTypes["nextauth_users_sessions"];
export type NextauthUsersSessionsRecord = NextauthUsersSessions & XataRecord;

export type Wishlist = InferredTypes["wishlist"];
export type WishlistRecord = Wishlist & XataRecord;

export type Cart = InferredTypes["cart"];
export type CartRecord = Cart & XataRecord;

export type CartItem = InferredTypes["cartItem"];
export type CartItemRecord = CartItem & XataRecord;

export type SocialMedia = InferredTypes["socialMedia"];
export type SocialMediaRecord = SocialMedia & XataRecord;

export type UserSocialMedia = InferredTypes["userSocialMedia"];
export type UserSocialMediaRecord = UserSocialMedia & XataRecord;

export type Order = InferredTypes["order"];
export type OrderRecord = Order & XataRecord;

export type OrderArtwork = InferredTypes["orderArtwork"];
export type OrderArtworkRecord = OrderArtwork & XataRecord;

export type Chat = InferredTypes["chat"];
export type ChatRecord = Chat & XataRecord;

export type ChatMessage = InferredTypes["chatMessage"];
export type ChatMessageRecord = ChatMessage & XataRecord;

export type ChatMember = InferredTypes["chatMember"];
export type ChatMemberRecord = ChatMember & XataRecord;

export type Follower = InferredTypes["follower"];
export type FollowerRecord = Follower & XataRecord;

export type Following = InferredTypes["following"];
export type FollowingRecord = Following & XataRecord;

export type Event = InferredTypes["event"];
export type EventRecord = Event & XataRecord;

export type EventRequest = InferredTypes["eventRequest"];
export type EventRequestRecord = EventRequest & XataRecord;

export type DatabaseSchema = {
  nextauth_users: NextauthUsersRecord;
  nextauth_accounts: NextauthAccountsRecord;
  nextauth_sessions: NextauthSessionsRecord;
  artwork: ArtworkRecord;
  nextauth_verificationTokens: NextauthVerificationTokensRecord;
  nextauth_users_accounts: NextauthUsersAccountsRecord;
  nextauth_users_sessions: NextauthUsersSessionsRecord;
  wishlist: WishlistRecord;
  cart: CartRecord;
  cartItem: CartItemRecord;
  socialMedia: SocialMediaRecord;
  userSocialMedia: UserSocialMediaRecord;
  order: OrderRecord;
  orderArtwork: OrderArtworkRecord;
  chat: ChatRecord;
  chatMessage: ChatMessageRecord;
  chatMember: ChatMemberRecord;
  follower: FollowerRecord;
  following: FollowingRecord;
  event: EventRecord;
  eventRequest: EventRequestRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://onFire-Abhi-s-workspace-4g9l1a.us-east-1.xata.sh/db/art-floyd",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
